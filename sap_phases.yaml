phases:
  - name: "Phase 1: Project Structure Setup"
    tasks:
      - id: "1.1"
        title: "Create root directory"
        description: "mkdir sap-protocol/"
      - id: "1.2"
        title: "Create subfolders"
        description: "frontend/, contracts/, agent/, workflow/, scripts/, docs/"
      - id: "1.3"
        title: "Initialize Git"
        description: "git init, create .gitignore, README.md"
      - id: "1.4"
        title: "Install package manager"
        description: "pnpm or yarn"
      - id: "1.5"
        title: "Add dev dependencies"
        description: "prettier, eslint, husky, lint-staged"

  - name: "Phase 2: Agent (zkVM-Ready BitNet LLM)"
    tasks:
      - id: "2.1"
        title: "Agent runner skeleton"
        description: "Implement agent/runAgentTask(prompt: string): string"
      - id: "2.2"
        title: "Basic simulation"
        description: "If prompt contains 'filter', return 'Approved'"
      - id: "2.3"
        title: "Model folder"
        description: "Copy BitNet model files into agent/model/"
      - id: "2.4"
        title: "zkVM bridge"
        description: "agent/loader.ts converts model & inference into zkVM format"
      - id: "2.5"
        title: "zkVM test deploy"
        description: "Run runAgentTask() via zkVM RPC on testnet"
      - id: "2.6"
        title: "Integrate real forward-pass"
        description: "Embed BitNet inference code into zkVM runtime"
      - id: "2.7"
        title: "Performance benchmarking"
        description: "Measure latency and gas/metering, document results"

  - name: "Phase 3: Smart Contracts (WorldID + TaskBoard)"
    tasks:
      - id: "3.1"
        title: "Initialize Hardhat"
        description: "npx hardhat in contracts/ folder"
      - id: "3.2"
        title: "Add WorldID verifier"
        description: "Install @worldcoin/idkit-contracts, import/inherit WorldID.sol"
      - id: "3.3"
        title: "AgentRegistry.sol"
        description: "WorldID proof → registerAgent(...) → mapping(address → Agent)"
      - id: "3.4"
        title: "TaskBoard.sol"
        description: "createTask(string), submitResult(uint256,string)"
      - id: "3.5"
        title: "Optional RewardToken.sol"
        description: "ERC-20 rewardAgent(address,uint)"
      - id: "3.6"
        title: "Deployment scripts"
        description: "scripts/deploy.ts with WorldID params & TaskBoard deploy"
      - id: "3.7"
        title: "Export ABIs & addresses"
        description: "artifacts/... → frontend"

  - name: "Phase 4: Frontend (React + Vite + Wagmi + WorldID + API)"
    tasks:
      - id: "4.1"
        title: "Initialize React project"
        description: "pnpm create vite in frontend/"
      - id: "4.2"
        title: "Blockchain & wallet connection"
        description: "Wagmi + Viem + Ethers on Polygon Mumbai"
      - id: "4.3"
        title: "Agent registration UI"
        description: "WorldID widget → onSuccess → registerAgent(...)"
      - id: "4.4"
        title: "Task board UI"
        description: "getAllTasks(), 'Solve' button → runner"
      - id: "4.5"
        title: "Agent runner UI"
        description: "useRunAgent hook → /api/run-agent → submitResult()"
      - id: "4.6"
        title: "Agent profile UI"
        description: "Show registration time, task count, score, last result"
      - id: "4.7"
        title: "Optional staking UI"
        description: "Staking & reward flow"

  - name: "Phase 5: Workflow Orchestrator (n8n-Style)"
    tasks:
      - id: "5.1"
        title: "Create workflow folder"
        description: "mkdir workflow/ in repo root"
      - id: "5.2"
        title: "Define JSON schema"
        description: "nodes (Trigger, AgentTask, ChainSubmit), connections"
      - id: "5.3"
        title: "Implement node types"
        description: "TriggerNode, AgentTaskNode, ChainSubmitNode, etc."
      - id: "5.4"
        title: "Engine execution"
        description: "Parse schema → run nodes sequentially, logging, retry"
      - id: "5.5"
        title: "Workflow designer UI"
        description: "Drag-drop node editor, JSON import/export, status panel"
      - id: "5.6"
        title: "Persistence layer"
        description: "Store workflows in IPFS or DB; add management APIs"
      - id: "5.7"
        title: "Test & demo"
        description: "Hourly sentiment analysis workflow → TaskBoard"

  - name: "Phase 6: Agent ↔ Chain Integration"
    tasks:
      - id: "6.1"
        title: "Fetch tasks"
        description: "Chain getTasks() in workflow TriggerNode"
      - id: "6.2"
        title: "Invoke agent inference"
        description: "AgentTaskNode calls runAgentTask() via /api/run-agent"
      - id: "6.3"
        title: "Submit results"
        description: "ChainSubmitNode calls submitResult()"
      - id: "6.4"
        title: "UI notifications"
        description: "Show completion status in workflow UI"
      - id: "6.5"
        title: "Error handling"
        description: "Retry logic and alerts"

  - name: "Phase 7: Testnet & Demo"
    tasks:
      - id: "7.1"
        title: "Deploy locally network"
        description: "Contracts via Hardhat, WorldID registration"
      - id: "7.2"
        title: "Run workflow demo"
        description: "Cron → AgentTask → ChainSubmit"
      - id: "7.3"
        title: "Acquire test tokens"
        description: "Faucet and WorldID proof"
      - id: "7.4"
        title: "UI controls"
        description: "Start/stop workflow, view logs"

  - name: "Phase 8: Presentation & Pitch"
    tasks:
      - id: "8.1"
        title: "Update pitch deck"
        description: "Add workflow engine slide"
      - id: "8.2"
        title: "Demo scenario"
        description: "Design → Execute → Blockchain write"
      - id: "8.3"
        title: "Roadmap slide"
        description: "V2 – Multi-agent workflows"
      - id: "8.4"
        title: "KPI metrics"
        description: "Workflow count, success rate, latency"

  - name: "Phase 9: Post-V1 Development"
    tasks:
      - id: "9.1"
        title: "Workflow production hardening"
        description: "High-volume cron, webhooks, event-driven"
      - id: "9.2"
        title: "Multi-agent flows"
        description: "Parallel/conditional branching"
      - id: "9.3"
        title: "On-chain workflow storage"
        description: "Save definitions in smart contract, on-chain invocation"
      - id: "9.4"
        title: "Agent & flow marketplace"
        description: "Template sharing, user contributions"
